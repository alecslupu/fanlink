version: "3.6"
services:
  postgres:
    image: postgres:alpine
    container_name: flapi-postgres
    # volumes: #Uncomment this to use persistant storage for postgres
    #   - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
  flapi: &flapi
    container_name: flapi
    build:
      context: ./
      dockerfile: flapi.dev.dockerfile
      args:
        BUILD_ENV: ${RAILS_ENV}
        FIREBASE_JSON_FILE_PATH: ${FIREBASE_JSON_FILE_PATH}
    image: flapi:dev
    links:
      - postgres
      - elasticsearch
    depends_on:
      - postgres
      - mail
      - elasticsearch
    restart: unless-stopped
    environment: &flapi-environment
      RAILS_ENV: ${RAILS_ENV}
      FANLINK_PG_USER: ${FANLINK_PG_USER}
      FANLINK_PG_PASSWORD: ${FANLINK_PG_PASSWORD}
      FANLINK_PG_HOST: ${FANLINK_PG_HOST}
      FANLINK_ES_HOST: ${FANLINK_ES_HOST}
      FIREBASE_CM_KEY: ${FIREBASE_CM_KEY}
      FIREBASE_URL: ${FIREBASE_URL}
      FIREBASE_KEY: ${FIREBASE_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MANDRILL_API_KEY: ${MANDRILL_API_KEY}
      PAPERCLIP_SECRET: ${PAPERCLIP_SECRET}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      PORTAL_URL: ${PORTAL_URL}
    ports:
      - 3000:3000
    volumes:
      - $PWD/:/usr/src/app
      - gems:/gems
  flapi-jobs:
    image: flapi:dev
    container_name: flapi-jobs
    command: '/entrypoint_queue'
    ports: []
    links:
      - postgres
    depends_on:
      - postgres
      - flapi
    environment:
      <<: *flapi-environment
      QUEUE: default
    volumes:
      - $PWD/:/usr/src/app
      - gems:/gems
    restart: unless-stopped

  mail:
    image: hinshun/mailcatcher
    container_name: flapi-mail
    restart: unless-stopped
    ports:
      - 1080:1080 # open browser here to warch mails sent by rails, use smtp to 1025 as config
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    container_name: flapi-es1
    environment:
      - cluster.name=flapi-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    container_name: flapi-es2
    environment:
      - cluster.name=flapi-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.1
    container_name: flapi-kibana
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: ${FANLINK_ES_HOST}

volumes:
  gems:
    driver: local
  #pgdata: #Uncomment this to use persistant storage for postgres
  #  driver: local
  esdata1:
    driver: local
  esdata2:
    driver: local
