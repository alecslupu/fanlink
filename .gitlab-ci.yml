stages:
  - build
  - test
  - rspec
  - format
  - report
  - deploy

.base_minimal:
  image: alpine:latest
  cache: {}
  tags:
    - anything

.base:
  image: ruby:2.5.1
  cache:
    key: gems_and_packages
    paths:
      - apt-cache/
      - vendor/ruby
      - vendor/bundle
  variables:
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - locale
    - gem install bundler -v $BUNDLER_VERSION
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
  tags:
    - anything

.base_db:
  extends: .base
  tags:
    - anything
  services:
    - postgres:latest
  variables:
    RAILS_ENV: test
    FANLINK_PG_USER: $POSTGRES_USER
    FANLINK_PG_PASSWORD: $POSTGRES_PASSWORD
    FANLINK_PG_HOST: $POSTGRES_HOST
    FANLINK_PG_DATABASE: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_DB: $POSTGRES_DB
  before_script:
    - gem install bundler -v $BUNDLER_VERSION
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - bundle exec rake db:reset
    - bundle exec rake db:setup
    - bundle exec rake db:test:prepare

include:
  - local: .gitlab/base.yml
  - local: .gitlab/standards.yml
  - local: .gitlab/rails52.yml
  - local: .gitlab/rails60.yml
  - local: .gitlab/rails61.yml
  - local: .gitlab/pages.yml
  - local: .gitlab/deployment.yml
