stages:
  - build
  - test
  - rubocop
  - rspec
  - format
  - report
  - deploy

.base_minimal:
  image: alpine:latest
  cache: {}
  tags:
    - anything

.base:
  image: ruby:2.5.1
  cache:
    key: gems_and_packages
    paths:
      - apt-cache/
      - vendor/ruby
      - vendor/bundle
  variables:
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
  before_script:
    - mkdir ~/.ssh/
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo "Host *" >> ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
    - which ssh-agent || ( apt-get update -yqq && apt-get install openssh-client -yqq )
    - eval $(ssh-agent -s)
    - ssh-add
    - ssh-add -l
    - export USER="$GITLAB_USER_LOGIN via gitlab"
    - git config --global user.name "$GITLAB_USER_LOGIN via gitlab"
    - apt-get update -yqq && DEBIAN_FRONTEND=noninteractive apt-get install -yqq locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - gem install bundler -v $BUNDLER_VERSION
    - bundle update --ruby --quiet
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --quiet --path=vendor
  tags:
    - anything

.base26:
  image: ruby:2.6
  cache:
    key: gems_and_packages
    paths:
      - apt-cache/
      - vendor/ruby
      - vendor/bundle
  variables:
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
    CUSTOM_RUBY_VERSION: "~> 2.6"
  before_script:
    - mkdir ~/.ssh/
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo "Host *" >> ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
    - which ssh-agent || ( apt-get update -yqq && apt-get install openssh-client -yqq )
    - eval $(ssh-agent -s)
    - ssh-add
    - ssh-add -l
    - export USER="$GITLAB_USER_LOGIN via gitlab"
    - git config --global user.name "$GITLAB_USER_LOGIN via gitlab"
    - apt-get update -yqq && DEBIAN_FRONTEND=noninteractive apt-get install -yqq locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - gem install bundler -v $BUNDLER_VERSION
    - bundle update --ruby --quiet
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --quiet --path=vendor
  tags:
    - anything

.base27:
  image: ruby:2.7
  cache:
    key: gems_and_packages
    paths:
      - apt-cache/
      - vendor/ruby
      - vendor/bundle
  variables:
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
    CUSTOM_RUBY_VERSION: "~> 2.7"
  before_script:
    - mkdir ~/.ssh/
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo "Host *" >> ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
    - which ssh-agent || ( apt-get update -yqq && apt-get install openssh-client -yqq )
    - eval $(ssh-agent -s)
    - ssh-add
    - ssh-add -l
    - export USER="$GITLAB_USER_LOGIN via gitlab"
    - git config --global user.name "$GITLAB_USER_LOGIN via gitlab"
    - apt-get update -yqq && DEBIAN_FRONTEND=noninteractive apt-get install -yqq locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - gem install bundler -v $BUNDLER_VERSION
    - bundle update --ruby --quiet
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --quiet --path=vendor
  tags:
    - anything

.base_db:
  extends: .base
  tags:
    - anything
  services:
    - postgres:latest
  variables:
    RAILS_ENV: test
    FANLINK_PG_USER: $POSTGRES_USER
    FANLINK_PG_PASSWORD: $POSTGRES_PASSWORD
    FANLINK_PG_HOST: $POSTGRES_HOST
    FANLINK_PG_DATABASE: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_DB: $POSTGRES_DB
  before_script:
    - apt-get update -yqq && DEBIAN_FRONTEND=noninteractive apt-get install  -yqq locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - gem install bundler -v $BUNDLER_VERSION
    - bundle update --ruby
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --quiet --path=vendor
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - bundle exec rake db:reset
    - bundle exec rake db:setup
    - bundle exec rake db:test:prepare

.base26_db:
  extends: .base26
  tags:
    - anything
  services:
    - postgres:latest
  variables:
    RAILS_ENV: test
    FANLINK_PG_USER: $POSTGRES_USER
    FANLINK_PG_PASSWORD: $POSTGRES_PASSWORD
    FANLINK_PG_HOST: $POSTGRES_HOST
    FANLINK_PG_DATABASE: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_DB: $POSTGRES_DB
  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install  -yqq locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - gem install bundler -v $BUNDLER_VERSION
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --quiet --path=vendor
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - bundle exec rake db:reset
    - bundle exec rake db:setup
    - bundle exec rake db:test:prepare

.base27_db:
  extends: .base27
  tags:
    - anything
  services:
    - postgres:latest
  variables:
    RAILS_ENV: test
    FANLINK_PG_USER: $POSTGRES_USER
    FANLINK_PG_PASSWORD: $POSTGRES_PASSWORD
    FANLINK_PG_HOST: $POSTGRES_HOST
    FANLINK_PG_DATABASE: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_DB: $POSTGRES_DB
  before_script:
    - apt-get update -yqq && DEBIAN_FRONTEND=noninteractive apt-get install -yqq locales
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    - dpkg-reconfigure --frontend=noninteractive locales
    - update-locale LANG=en_US.UTF-8
    - gem install bundler -v $BUNDLER_VERSION
    - bundle --version && bundle install --jobs $(nproc) "${FLAGS[@]}" --quiet --path=vendor
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - bundle exec rake db:reset
    - bundle exec rake db:setup
    - bundle exec rake db:test:prepare

include:
  - local: .gitlab/ruby25/base.yml
  - local: .gitlab/ruby25/standards.yml
  - local: .gitlab/ruby25/rails60.yml
  - local: .gitlab/ruby25/pages.yml
  - local: .gitlab/ruby25/deployment.yml
  #  - local: .gitlab/ruby26/base.yml
  #  - local: .gitlab/ruby26/standards.yml
  #  - local: .gitlab/ruby26/rails60.yml
  # - local: .gitlab/ruby25/rubocops.yml
  # - local: .gitlab/ruby27/base.yml
  # - local: .gitlab/ruby27/standards.yml
  # - local: .gitlab/ruby27/rails60.yml
  # - local: .gitlab/ruby26/pages.yml
  # - local: .gitlab/ruby26/deployment.yml
  # - local: .gitlab/ruby27/pages.yml
  # - local: .gitlab/ruby27/deployment.yml
  # - local: .gitlab/ruby25/rails52.yml
  # - local: .gitlab/ruby25/rails61.yml
