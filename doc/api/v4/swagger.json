{
  "swagger": "2.0",
  "info": {
    "title": "API V4",
    "version": "v4"
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "...",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "BadgeActions",
      "description": "Badge Actions"
    },
    {
      "name": "Badges",
      "description": "Badges"
    },
    {
      "name": "Categories",
      "description": "Categories"
    },
    {
      "name": "Followings",
      "description": "Followers and following"
    },
    {
      "name": "Interests",
      "description": "Interests"
    },
    {
      "name": "Levels",
      "description": "Levels"
    },
    {
      "name": "MessageReports",
      "description": "Message Reports"
    },
    {
      "name": "Messages",
      "description": "Messages"
    },
    {
      "name": "NotificationDeviceIds",
      "description": "Notification Device IDs"
    },
    {
      "name": "PasswordResets",
      "description": "Password Reset"
    },
    {
      "name": "People",
      "description": "Users"
    },
    {
      "name": "PostCommentReports",
      "description": "Reported comments on posts"
    },
    {
      "name": "PostComments",
      "description": "Comments on a post"
    },
    {
      "name": "PostReports",
      "description": "Posts reported by a user"
    },
    {
      "name": "Posts",
      "description": "User/product posts"
    },
    {
      "name": "Referral",
      "description": "Referral system "
    },
    {
      "name": "Relationships",
      "description": "User's relationships"
    },
    {
      "name": "Rooms",
      "description": "Chat rooms"
    },
    {
      "name": "Session",
      "description": "User session management."
    }
  ],
  "paths": {
    "/badge_actions": {
      "post": {
        "summary": "POST create a badge action",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "BadgeActions"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "badge_action[action_type]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/BadgeActionsPending"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Not found. A reward is not associated with the badge action"
          },
          "422": {
            "description": "Unprocessable Entity. Usually occurs when a field is invalid or missing."
          },
          "429": {
            "description": "Not enough time since last submission of this action type or duplicate action type, person, identifier combination"
          },
          "500": {
            "description": "Internal Server Error. Server threw an unrecoverable error. Create a ticket with any form fields you we're trying to send, the URL, API version number and any steps you took so that it can be replicated."
          }
        }
      }
    },
    "/badges": {
      "get": {
        "summary": "List of the badges",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Badges"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "",
            "default": 25
          },
          {
            "name": "person_id",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/BadgesArray"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error. Server threw an unrecoverable error. Create a ticket with any form fields you we're trying to send, the URL, API version number and any steps you took so that it can be replicated."
          }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          },
          {
            "name": "product",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/CategoryArray"
            }
          },
          "401": {
            "description": "Unauthorized. "
          },
          "404": {
            "description": "Not Found. If the error says a route is missing, it usually means you forgot the ACCEPT header."
          },
          "500": {
            "description": "Internal Server Error. Server threw an unrecoverable error. Create a ticket with any form fields you we're trying to send, the URL, API version number and any steps you took so that it can be replicated."
          }
        }
      }
    },
    "/certcourses/{id}": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Courseware"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/followings": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Followings"
        ],
        "parameters": [
          {
            "name": "followed_id",
            "in": "formData",
            "type": "string"
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/FollowingObject"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Followings"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          },
          {
            "name": "followed_id",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "follower_id",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/FollowersArray"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/interests/match": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Interests"
        ],
        "parameters": [
          {
            "name": "interest_ids",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/interests/{id}/add": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Interests"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "interest[title]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "interest[parent_id]",
            "in": "formData",
            "type": "integer"
          },
          {
            "name": "interest[order]",
            "in": "formData",
            "type": "integer"
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/interests/{id}/remove": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Interests"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/interests": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Interests"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/levels": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Levels"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/LevelsArray"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/message_reports": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "tags": [
          "MessageReports"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/MessageReportsArray"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rooms/{room_id}/message_reports": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "MessageReports"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "message_report[message_id]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "message_report[reason]",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "422": {
            "description": "Unprocessable Entity. Usually occurs when a field is invalid or missing."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/notification_device_ids": {
      "post": {
        "summary": "",
        "tags": [
          "NotificationDeviceIds"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "",
        "tags": [
          "NotificationDeviceIds"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/password_forgot": {
      "post": {
        "summary": "",
        "tags": [
          "PasswordResets"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "email_or_username",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "People"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "application/vnd.api.v4+json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "type": "string"
          },
          {
            "name": "product_account_filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_filer",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username_filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PeopleArray"
            }
          },
          "401": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "",
        "tags": [
          "People"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "person[email]",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "person[username]",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "person[password]",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "person[picture]",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "facebook_auth_token",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "referrer",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PersonObject"
            }
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/{id}": {
      "patch": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "People"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "person[email]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "person[biography]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "person[name]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "person[picture]",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "person[gender]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "person[birthdate]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "person[city]",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "person[country_code]",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PersonObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "People"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PersonObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/{id}/change_password": {
      "patch": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "People"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "person[current_password]",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "person[new_password]",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/{user_id}/interests": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Interests"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/person_certcourses/send_email": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Courseware"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "page_id",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/person_certificates/{unique_id}": {
      "get": {
        "summary": "Show the subscription information",
        "tags": [
          "Certificates"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "application/vnd.api.v4+json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "type": "string"
          },
          {
            "name": "unique_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{id}/polls/{poll_id}/poll_options/{poll_option_id}/cast_vote": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll_option_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PollOptionObject"
            }
          },
          "401": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/post_comment_reports": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "PostCommentReports"
        ],
        "parameters": [
          {
            "name": "post_comment_report[post_comment_id]",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "post_comment_report[reason]",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "PostCommentReports"
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostCommentReportsArray"
            }
          },
          "401": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{id}/comments": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "PostComments"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostCommentsArray"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "PostComments"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "post_comment[body]",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostCommentsObject"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{post_id}/comments/{id}": {
      "delete": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "PostComments"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{post_id}/reactions": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "post_reaction[reaction]",
            "in": "formData",
            "type": "string"
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostReactionsObject"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{post_id}/reactions/{id}": {
      "delete": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "post_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/post_reports": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "PostReports"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "post_report[post_id]",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "post_report[reason]",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          },
          {
            "name": "promoted",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "post_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "chronologically",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "before",
              "after"
            ],
            "default": "after"
          },
          {
            "name": "tag",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "categories",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "person_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "id_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "person_id_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "person_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "body_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "posted_after_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "posted_before_filter",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "status_filter",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostsArray"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "422": {
            "description": "Unprocessable Entity. Usually occurs when a field is invalid or missing."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "post[body]",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "post[picture]",
            "in": "formData",
            "type": "file",
            "required": true
          },
          {
            "name": "post[audio]",
            "in": "formData",
            "type": "file",
            "required": true
          },
          {
            "name": "post[video]",
            "in": "formData",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostsObject"
            }
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{id}": {
      "patch": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostsObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/PostsObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/recommended": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Posts"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RecommendedPostsArray"
            }
          },
          "401": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/referral": {
      "get": {
        "summary": "List the referral code",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Referal"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MiniPeopleArray"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/referral/purchased": {
      "get": {
        "summary": "List the referral code",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Referal"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MiniPeopleArray"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/people/referral/me": {
      "get": {
        "summary": "List the referral code",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Referal"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralCode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/relationships": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Relationships"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "relationship[requested_to_id]",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RelationshipsObject"
            }
          },
          "422": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Relationships"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "with_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "person_id",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RelationshipsArray"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/relationships/{id}": {
      "delete": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Relationships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Relationships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "relationship[status]",
            "in": "formData",
            "type": "string"
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RelationshipsObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rooms": {
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Rooms"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "room[name]",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "room[picture]",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "room[member_ids][]",
            "in": "formData",
            "type": "array",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RoomsObject"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "name": "private",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RoomsArray"
            }
          },
          "401": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rooms/{id}": {
      "patch": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "room[name]",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "room[picture]",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "room[member_ids]",
            "in": "formData",
            "type": "array",
            "required": false
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/RoomsObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rooms/{id}/messages": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "from_date",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "to_date",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum"
          },
          {
            "name": "pinned",
            "in": "formData",
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "description": " Lorem ipsum",
            "required": false
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/MessagesArray"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "message[body]",
            "in": "formData",
            "type": "string"
          }
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/MessagesObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rooms/{room_id}/messages/{id}": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Messages"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/MessagesObject"
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          "Messages"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/session/token": {
      "post": {
        "summary": "generates a  valid JWT",
        "tags": [
          "Session"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "email_or_username",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "product",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok",
            "schema": {
              "$ref": "#/definitions/SessionObject"
            }
          },
          "422": {
            "description": "Invalid login"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/session": {
      "post": {
        "summary": "Used to log someone in",
        "tags": [
          "Session"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "facebook_auth_token",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "email_or_username",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an user object if successful",
            "schema": {
              "$ref": "#/definitions/SessionObject"
            }
          },
          "422": {
            "description": "Invalid login"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Log someone out",
        "tags": [
          "Session"
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/tags": {
      "get": {
        "summary": "",
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "tags": [
          [
            "post",
            "android-old"
          ]
        ],
        "produces": [
          "application/vnd.api.v4+json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 1,
            "minimum": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          },
          {
            "name": "tag_name",
            "in": "query",
            "type": "string",
            "required": false,
            "description": " Lorem ipsum",
            "default": 25
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 Ok"
          },
          "401": {
            "description": ""
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "BadgeJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "internal_name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "picture_url": {
          "type": "string"
        },
        "action_requirement": {
          "type": "integer"
        },
        "point_value": {
          "type": "integer"
        }
      },
      "description": "Badge Response"
    },
    "BadgeActionsPending": {
      "type": "object",
      "properties": {
        "pending_badge": {
          "type": "object",
          "properties": {
            "badge_action_count": {
              "type": "integer"
            },
            "badge": {
              "$ref": "#/definitions/BadgeJson"
            }
          }
        },
        "badges_awarded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BadgeJson"
          }
        }
      }
    },
    "BadgesArray": {
      "type": "object",
      "properties": {
        "badges": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "badge": {
                "$ref": "#/definitions/BadgeJson"
              }
            }
          }
        }
      }
    },
    "PeopleArray": {
      "type": "object",
      "properties": {
        "people": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "person": {
                "$ref": "#/definitions/PersonJson"
              }
            }
          }
        }
      }
    },
    "PersonObject": {
      "type": "object",
      "properties": {
        "person": {
          "$ref": "#/definitions/PersonJson"
        }
      }
    },
    "PostCommentReportsArray": {
      "type": "object",
      "properties": {
        "post_comment_reports": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "post_comment_report": {
                "$ref": "#/definitions/PostCommentReportJson"
              }
            }
          }
        }
      }
    },
    "PostCommentReportJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "post_comment_id": {
          "type": "integer"
        },
        "commenter": {
          "type": "string"
        },
        "reporter": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "description": "Post Comment Report Response"
    },
    "PostCommentsArray": {
      "type": "object",
      "properties": {
        "post_comments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "post_comment": {
                "$ref": "#/definitions/PostCommentJson"
              }
            }
          }
        }
      }
    },
    "PostCommentJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "body": {
          "type": "string"
        },
        "mentions": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MentionJson"
          }
        },
        "person": {
          "$ref": "#/definitions/PersonJson"
        }
      },
      "description": "Post Comment Response"
    },
    "MentionJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "person_id": {
          "type": "integer"
        },
        "location": {
          "type": "integer"
        },
        "length": {
          "type": "integer"
        }
      },
      "description": "Notification Type ID Response"
    },
    "PostCommentsObject": {
      "type": "object",
      "properties": {
        "post_comment": {
          "$ref": "#/definitions/PostCommentJson"
        }
      }
    },
    "PostReactionJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "post_id": {
          "type": "integer"
        },
        "person_id": {
          "type": "integer"
        },
        "reaction": {
          "type": "string"
        }
      },
      "description": "Post Reaction Response"
    },
    "PollOptionVoteJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "numberOfVotes": {
          "type": "integer"
        },
        "voted": {
          "type": "boolean"
        }
      }
    },
    "PollOptionObject": {
      "type": "object",
      "properties": {
        "poll": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PollOptionVoteJson"
          }
        }
      }
    },
    "PostReactionsObject": {
      "type": "object",
      "properties": {
        "post_reaction": {
          "$ref": "#/definitions/PostReactionJson"
        }
      }
    },
    "FollowingObject": {
      "type": "object",
      "properties": {
        "following": {
          "$ref": "#/definitions/FollowingJson"
        }
      }
    },
    "FollowingJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "follower": {
          "$ref": "#/definitions/PersonJson"
        },
        "followed": {
          "$ref": "#/definitions/PersonJson"
        }
      },
      "description": "Following Response"
    },
    "FollowersArray": {
      "type": "object",
      "properties": {
        "followers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "follower": {
                "$ref": "#/definitions/FollowingJson"
              }
            }
          }
        }
      }
    },
    "LevelsArray": {
      "type": "object",
      "properties": {
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LevelJson"
          }
        }
      }
    },
    "LevelJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "internal_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "points": {
          "type": "integer"
        },
        "picture_url": {
          "type": "string"
        }
      },
      "description": "Level Response"
    },
    "MessageReportsArray": {
      "type": "object",
      "properties": {
        "message_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageReportJson"
          }
        }
      }
    },
    "MessageReportJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "message_id": {
          "type": "integer"
        },
        "poster": {
          "type": "object",
          "$ref": "#/definitions/PersonJson"
        },
        "reporter": {
          "type": "object",
          "$ref": "#/definitions/PersonJson"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "description": "Message Report Response"
    },
    "RelationshipJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "update_time": {
          "type": "string",
          "format": "date-time"
        },
        "requested_by": {
          "$ref": "#/definitions/PersonJson"
        },
        "requested_to": {
          "$ref": "#/definitions/PersonJson"
        }
      },
      "description": "Relationship Response"
    },
    "PersonJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "gender": {
          "type": "string"
        },
        "city": {
          "type": "string",
          "x-nullable": true
        },
        "biography": {
          "type": "string",
          "x-nullable": true
        },
        "country_code": {
          "type": "string",
          "x-nullable": true
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "picture_url": {
          "type": "string",
          "x-nullable": true
        },
        "product_account": {
          "type": "boolean"
        },
        "recommended": {
          "type": "boolean"
        },
        "chat_banned": {
          "type": "boolean"
        },
        "designation": {
          "type": "string",
          "x-nullable": true
        },
        "following_id": {
          "type": "integer",
          "x-nullable": true
        },
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationshipJson"
          }
        },
        "badge_points": {
          "type": "integer"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "string",
          "x-nullable": true
        },
        "do_not_message_me": {
          "type": "boolean"
        },
        "pin_messages_from": {
          "type": "boolean"
        },
        "auto_follow": {
          "type": "boolean"
        },
        "num_followers": {
          "type": "integer"
        },
        "num_following": {
          "type": "integer"
        },
        "facebookid": {
          "type": "string",
          "x-nullable": true
        },
        "facebook_picture_url": {
          "type": "string",
          "x-nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Person Response"
    },
    "PostsObject": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostJson"
        }
      }
    },
    "PostsArray": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "post": {
                "$ref": "#/definitions/PostJson"
              }
            }
          }
        }
      }
    },
    "MessagesArray": {
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "message": {
                "$ref": "#/definitions/MessageJson"
              }
            }
          }
        }
      }
    },
    "MessagesObject": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/MessageJson"
        }
      }
    },
    "MessageJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "body": {
          "type": "string"
        },
        "picture_url": {
          "type": "string",
          "x-nullable": true
        },
        "audio_url": {
          "type": "string",
          "x-nullable": true
        },
        "audio_size": {
          "type": "string",
          "x-nullable": true
        },
        "audio_content_type": {
          "type": "string",
          "x-nullable": true
        },
        "person": {
          "$ref": "#/definitions/PersonJson"
        },
        "mentions": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MentionJson"
          }
        }
      },
      "description": "Message Response"
    },
    "RelationshipsArray": {
      "type": "object",
      "properties": {
        "relationships": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "relationship": {
                "$ref": "#/definitions/RelationshipJson"
              }
            }
          }
        }
      }
    },
    "RelationshipsObject": {
      "type": "object",
      "properties": {
        "relationship": {
          "$ref": "#/definitions/RelationshipJson"
        }
      }
    },
    "RoomsArray": {
      "type": "object",
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "room": {
                "$ref": "#/definitions/RoomJson"
              }
            }
          }
        }
      }
    },
    "RoomJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "owned": {
          "type": "boolean"
        },
        "picture_url": {
          "type": "string",
          "x-nullable": true
        },
        "public": {
          "type": "boolean"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "member": {
                "$ref": "#/definitions/PersonJson"
              }
            }
          }
        }
      },
      "description": "Room Response"
    },
    "SessionObject": {
      "type": "object",
      "properties": {
        "person": {
          "$ref": "#/definitions/PersonJson"
        }
      }
    },
    "RoomsObject": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/RoomJson"
        }
      }
    },
    "RecommendedPostsArray": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "post": {
                "$ref": "#/definitions/PostJson"
              }
            }
          }
        }
      }
    },
    "PostJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "body": {
          "type": "string",
          "x-nullable": true
        },
        "picture_url": {
          "type": "string",
          "x-nullable": true
        },
        "audio_url": {
          "type": "string",
          "x-nullable": true
        },
        "audio_size": {
          "type": "integer",
          "x-nullable": true
        },
        "audio_content_type": {
          "type": "string",
          "x-nullable": true
        },
        "person": {
          "$ref": "#/definitions/PersonJson"
        },
        "post_reaction_counts": {
          "type": "integer",
          "x-nullable": true
        },
        "post_reaction": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PostReactionJson"
          }
        },
        "global": {
          "type": "boolean"
        },
        "starts_at": {
          "type": "string",
          "x-nullable": true,
          "format": "date-time"
        },
        "ends_at": {
          "type": "string",
          "x-nullable": true,
          "format": "date-time"
        },
        "repost_interval": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "recommended": {
          "type": "boolean"
        },
        "notify_followers": {
          "type": "boolean"
        },
        "comment_count": {
          "type": "integer"
        },
        "category": {
          "type": "object",
          "x-nullable": true,
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "role": {
              "type": "string"
            }
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagJson"
          }
        }
      },
      "description": "Post Response"
    },
    "TagJson": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "description": "Tag Response"
    },
    "CategoryJson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "product_id": {
          "type": "integer"
        },
        "color": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostJson"
          }
        }
      },
      "description": "Category Reponse"
    },
    "ReferralCode": {
      "type": "object",
      "properties": {
        "person_id": {
          "type": "integer"
        },
        "unique_code": {
          "type": "string"
        }
      }
    },
    "CategoryArray": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "category": {
                "$ref": "#/definitions/CategoryJson"
              }
            }
          }
        }
      }
    },
    "personMini": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "picture_url": {
          "type": "string"
        },
        "designation": {
          "type": "string"
        },
        "facebook_picture_url": {
          "type": "string"
        },
        "badge_points": {
          "type": "integer"
        },
        "level": {
          "$ref": "#/definitions/LevelJson",
          "x-nullable": true
        }
      }
    },
    "MiniPeopleArray": {
      "type": "object",
      "properties": {
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/personMini"
          }
        }
      }
    }
  }
}