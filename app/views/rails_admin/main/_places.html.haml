%script{type: "text/javascript"}
    :plain
        // This sample uses the Place Autocomplete widget to allow the user to search
        // for and select a place. The sample then displays an info window containing
        // the place ID and other information about the place that the user has
        // selected.

        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        function initMap() {
            var lat = parseFloat(document.getElementById("event_place_identifier").dataset.lat);
            var lng = parseFloat(document.getElementById("event_place_identifier").dataset.lng);
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: lat, lng: lng},
                zoom: 13,
                mapTypeControl: false
            });

            var input = document.getElementById('pac-input');

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(input);
            var infowindow = new google.maps.InfoWindow();
            var infowindowContent = document.getElementById('infowindow-content');
            infowindow.setContent(infowindowContent);
            var marker = new google.maps.Marker({
                map: map
            });
            marker.addListener('click', function() {
                infowindow.open(map, marker);
            });
            var anch = document.createElement("a");
            anch.setAttribute("id", "use-place");
            anch.setAttribute("class", "button");
            anch.setAttribute("style", "display:block");
            var textNode = document.createTextNode("Use This");
            anch.appendChild(textNode);
            anch.addEventListener('click', function() {
                console.log(infowindowContent.children['place-id'].textContent);
                document.getElementById("event_place_identifier").value = infowindowContent.children['place-id'].textContent;
                infowindow.close();
            });
            infowindowContent.appendChild(anch);
            google.maps.event.addDomListener(input, 'keydown', function(event) {
                if (event.keyCode == 13) {
                    event.preventDefault();
                }
            });

            autocomplete.addListener('place_changed', function() {
                infowindow.close();
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    return;
                }

                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }
                // Set the position of the marker using the place ID and location.
                marker.setPlace({
                    placeId: place.place_id,
                    location: place.geometry.location
                });
                marker.setVisible(true);

                infowindowContent.children['place-name'].textContent = place.name;
                infowindowContent.children['place-id'].textContent = place.place_id;
                infowindowContent.children['place-address'].textContent =
                    place.formatted_address;
                infowindow.open(map, marker);
            });
            setTimeout(function() { document.getElementById('pac-input').style.display = 'block' }, 1000);
        }

%script{src: url, async: "", defer: ""}
%input{type: "text",  id: "pac-input",  placeholder: "Enter a location to look up"  }
%div{id: "infowindow-content", style: "display: none" }
    %span{id: "place-name"}
    %br
    %span{id: "place-id"}
    %br
    %span{id: "place-address"}
= form.send field.view_helper, field.method_name, field.html_attributes.reverse_merge({ value: field.form_value, class: 'form-control', style: 'display: none', required: field.required, data: { lat: place_info.present? ? place_info.lat : 36.11,  lng: place_info.present? ? place_info.lng : -115.17 } })
%div{style:"clear:both"}
%div{id: "map", style: "width: 600px; height: 600px" }
