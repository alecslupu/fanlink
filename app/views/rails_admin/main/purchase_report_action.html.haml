:ruby
  query = params[:query]
  params = request.params.except(:authenticity_token, :action, :controller, :utf8, :_pjax)
  params.delete(:query) if params[:query].blank?
  params.delete(:sort_reverse) unless params[:sort_reverse] == 'true'
  sort_reverse = params[:sort_reverse]
  sort = params[:sort]

  properties = @model_config.list.with(controller: self.controller, view: self, object: @abstract_model.model.new).visible_fields

  sets = get_column_sets(properties)
  properties = sets[params[:set].to_i] || []
  filter_payload = JSON.generate({ index: 1, datetimepicker_format: "MMMM DD, YYYY HH:mm", label:"From",name:"person_certificates.created_at", type:"date", value: (params[:f]['person_certificates.created_at'].first.last[:v] rescue ""),operator: (params[:f]['person_certificates.created_at'].first.last[:o] rescue nil) })

:javascript
  jQuery(function($) {
     $.filters.append(#{raw filter_payload});
  });


%style
  - properties.select{ |p| p.column_width.present? }.each do |property|
    = "#list th.#{property.css_class} { width: #{property.column_width}px; min-width: #{property.column_width}px; }"
    = "#list td.#{property.css_class} { max-width: #{property.column_width}px;Â }"


#list
  = form_tag(purchase_report_action_path(params.except(*%w[page f query])), method: :get, class: "pjax-form form-inline") do
    .well
      %span#filters_box{style: "position: relative"}
      %hr.filters_box{style: "display:#{ordered_filters.empty? ? 'none' : 'block'}"}
      .input-group
        %span.input-group-btn
          %button.btn.btn-primary{type: 'submit', :'data-disable-with' => '<i class="icon-white icon-refresh"></i> '.html_safe + t('admin.misc.refresh')}
            %i.icon-white.icon-refresh
            = t('admin.misc.refresh')
          %button#remove_filter.btn.btn-info{title: "Reset filters"}
            %i.icon-white.icon-remove


  %table.table.table-condensed.table-striped
    %thead
      %tr
        %th{rel: "tooltip"} Id
        %th{rel: "tooltip"} Inviter
        %th{rel: "tooltip"} Invited people
        %th{rel: "tooltip"} Amount paid
    %tbody
      - @objects.each do |object|
        %tr{class: "#{@abstract_model.param_key}_row #{@model_config.list.with(object: object).row_css_class}"}
          %td{title: strip_tags(object.to_s)}= object.id
          %td{title: strip_tags(object.to_s)}
            - amc = RailsAdmin.config(object)
            - am = amc.abstract_model
            - wording = object.send(amc.object_label_method)
            - can_see = !am.embedded? && (show_action = action(:show, am, object))
            = can_see ? link_to(wording, url_for(action: show_action.action_name, model_name: am.to_param, id: object.id), class: 'pjax') : ERB::Util.html_escape(wording)

          %td{title: strip_tags(object.to_s)}= object.refferal_count
          %td{title: strip_tags(object.to_s)}= object.amount

  -#- if @model_config.list.limited_pagination
  -#  .row
  -#    .col-md-6= paginate(@objects, theme: 'ra-twitter-bootstrap/without_count', total_pages: Float::INFINITY, remote: true)
  -#
  -#- elsif @objects.respond_to?(:total_count)
  - total_count = @objects.total_count.to_i
  .row
    .col-md-6= paginate(@objects, theme: 'ra-twitter-bootstrap', remote: true)
  .row
    .col-md-6= link_to(t("admin.misc.show_all"), purchase_report_action_path(params.merge(all: true)), class: "show-all btn btn-default clearfix pjax") unless total_count > 100 || total_count <= @objects.to_a.size
  .clearfix.total-count= "#{total_count} #{@model_config.pluralize(total_count).downcase}"

  -#- else
  -#  .clearfix.total-count= "#{@objects.size} #{@model_config.pluralize(@objects.size).downcase}"
