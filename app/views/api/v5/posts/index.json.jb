json = {}
if @req_source == "web"
  json[:posts] = @posts.map do |post|
    p = Rails.cache.fetch ["v5", "post", @req_source, post.id, post.updated_at.to_i] do
      render partial: @req_source, locals: { post: post,  post_reaction: @post_reactions[post.id] }
    end
    p[:person] = render partial: "person", locals: { person: post.person }, handlers: "jb"
    p[:picture_url] = post.picture_url
    p[:audio_url] = post.audio_url
    p[:video_url] = post.video_url if post.video_transcoded
    p[:comment_count] = post.post_comments_count
    p
  end
else
  json[:posts] = @posts.map do |post|
    p = Rails.cache.fetch ["v5", "post", @req_source, post.id, post.updated_at.to_i] do
      render partial: @req_source, locals: { post: post,  post_reaction: @post_reactions[post.id] }
    end
    if defined?(@post_reactions[post.id]) && @post_reactions[post.id].present?
      p[:post_reaction] =
      {
        id: @post_reactions[post.id].id,
        post_id: @post_reactions[post.id].post_id,
        person_id: @post_reactions[post.id].person_id,
        reaction: @post_reactions[post.id].reaction
      }
    else
      p[:post_reaction] = nil
    end
    p[:post_reaction_counts] = post.reaction_breakdown
    # p[:cached_reaction_counts] = post.cached_reaction_count
    p[:person] = Rails.cache.fetch ["v5", "person", @req_source, post.person.id, post.person.updated_at.to_i] do
      render partial: "api/v5/people/#{@req_source}", locals: { person: post.person }
    end
    p
  end
end
json[:total] = @posts.size
json
