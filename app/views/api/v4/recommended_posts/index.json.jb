# frozen_string_literal: true
json = {}

json[:recommended_posts] = @posts.map do |post|
  p = render partial: "api/v4/posts/#{@req_source}", locals: { post: post, lang: @lang, post_reaction: @post_reactions[post.id] }
  if defined?(@post_reactions[post.id]) && @post_reactions[post.id].present?
    p[:post_reaction] =
    {
      id: @post_reactions[post.id].id,
      post_id: @post_reactions[post.id].post_id,
      person_id: @post_reactions[post.id].person_id,
      reaction: @post_reactions[post.id].reaction
    }
  else
    p[:post_reaction] = nil
  end
  p[:post_reaction_counts] = post.reaction_breakdown

  if post.poll.present?
    p[:poll] = render(partial: "api/v4/polls/#{@req_source}", locals: { poll: post.poll }, handlers: "jb")
    p[:poll][:closed] = post.poll.closed?
    if post.poll.poll_options.present?
      p[:poll][:poll_options] = post.poll.poll_options.map do |option|
        po = render(partial: "api/v4/poll_options/#{@req_source}", locals: { option: option }, handlers: "jb")
        po[:numberOfVotes] = option.votes
        po[:voted] = option.voted?(current_user)
        po
      end
    end
  end
  p
end

json
