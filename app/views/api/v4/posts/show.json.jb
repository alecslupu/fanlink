json = {}
json[:post] = Rails.cache.fetch ["v4", "post", @req_source, @post.id, @post.updated_at.to_i] do
  render(partial: @req_source, locals: { post: @post }, handlers: "jb")
end

json[:post][:pinned] = @post.pinned

if defined?(@post_reaction) && @post_reaction.present?
  json[:post][:post_reaction] =
  {
    id: @post_reaction.id,
    post_id: @post_reaction.post_id,
    person_id: @post_reaction.person_id,
    reaction: @post_reaction.reaction
  }
else
  json[:post][:post_reaction] = nil
end
if @post.poll.present?
  json[:post][:poll] = Rails.cache.fetch ["v4", "poll", @req_source, @post.poll.id, @post.poll.updated_at.to_i] do
    render(partial: "api/v4/polls/#{@req_source}", locals: { poll: @post.poll }, handlers: "jb")
  end
  json[:post][:poll][:closed] = @post.poll.closed?
  if @post.poll.poll_options.present?
    json[:post][:poll][:poll_options] = @post.poll.poll_options.map do |option|
      po = Rails.cache.fetch ["v4", "poll_options", @req_source, option.id, option.updated_at.to_i] do
        render(partial: "api/v4/poll_options/#{@req_source}", locals: { option: option }, handlers: "jb")
      end
      po[:numberOfVotes] = option.voters.count
      po[:voted] = option.voted?(current_user)
      po
    end
  end
end 
if @device.to_s == 'ios'
  json[:post][:post_reaction_counts] = @post.reaction_breakdown.to_json
else
  json[:post][:post_reaction_counts] = @post.reaction_breakdown
end
json
