{"swagger":"2.0","info":{"title":"fanlink","version":"0.0.0","description":""},"x-permissions":{"admin":{"name":"admin","description":""},"user":{"name":"user","description":""},"admin, superadmin":{"name":"admin, superadmin","description":""}},"paths":{"/badge_actions":{"post":{"tags":["Badges"],"summary":"Create a badge action.","description":"This creates a badge action. A badge action is a record of something done of a particular action type in the app. Badge actions are earned toward unearned badges of the action type matching the badge action. This call returns either an array of earned badges or an object called pending_badge with the points earned so far and the badge info. If more than one badge has been partially earned, the badge with the highest percentage earned is returned.","operationId":"CreateBadgeAction","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/badges":{"get":{"tags":["Badges"],"summary":"Get badges for a passed in user.","description":"This gets a list of all badges earned for a passed in user. Will include points earned towards each badge and whether badge has been awarded to the user.","operationId":"GetBadges","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/product_beacons/{id}":{"patch":{"tags":["Beacons"],"summary":"Update a beacon","description":"","operationId":"BeaconUpdate","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/BeaconUpdateSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"product_beacon\": {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"beacon_pid\": \"abcdef-123456\",\n        \"attached_to\": 5,\n        \"created_at\": \"Datetime\"\n     }\n}"}}}},"delete":{"tags":["Beacons"],"summary":"title","description":"","operationId":"DeleteBeacon","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeleteBeaconSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK"}}}},"get":{"tags":["Beacons"],"summary":"Get Beacon by id or it's product id","description":"","operationId":"GetBeacon","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetBeaconSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"product_beacon\": {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"beacon_pid\": \"abcdef-123456\",\n        \"attached_to\": 1,\n        \"created_at\": \"Datetime\"\n     }\n}"}}}}},"/product_beacons":{"post":{"tags":["Beacons"],"summary":"Add a beacon to a product","description":"","operationId":"CreateBeacon","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CreateBeaconSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"product_beacon\": {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"beacon_pid\": \"abcdef-123456\",\n        \"attached_to\": 1,\n        \"created_at\": \"Datetime\"\n     }\n}"}}}},"get":{"tags":["Beacons"],"summary":"Beacons for a product","description":"","operationId":"ProductBeacons","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductBeaconsSuccess"},"examples":{"application/unknown":"{\n    \"product_beacons\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"beacon_pid\": \"abcdef-123456\",\n        \"attached_to\": 1,\n        \"created_at\": \"Datetime\"\n     }\n   ]\n}"}}}}},"/product_beacons/list":{"get":{"tags":["Beacons"],"summary":"Get a list of all beacons.","description":"","operationId":"GetBeaconsList","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetBeaconsListSuccess"},"examples":{"application/unknown":"{\n    \"beacons\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"beacon_pid\": \"abcdef-123456\",\n        \"attached_to\": 1,\n        \"deleted\": false,\n        \"created_at\": \"Datetime\"\n     }\n   ]\n}"}}}}},"/blocks":{"post":{"tags":["Blocks"],"summary":"Block a person.","description":"This is used to block a person. When a person is blocked, any followings and relationships are immediately removed between the users.","operationId":"CreateBlock","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/blocks/{id}":{"delete":{"tags":["Blocks"],"summary":"Unblock a person.","description":"This is used to unblock a person.","operationId":"DeleteBlock","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/events/{id}":{"get":{"tags":["Events"],"summary":"Get a single event.","description":"This gets a single event for an event id.","operationId":"GetEvent","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/events":{"get":{"tags":["Events"],"summary":"Get available events.","description":"This gets a list of events, in starts_at order.","operationId":"GetEvents","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/followings":{"post":{"tags":["Following"],"summary":"Follow a person.","description":"This is used to follow a person.","operationId":"CreateFollowing","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Following"],"summary":"Get followers or followings of a user.","description":"This is used to get a list of someone's followers or followed. If followed_id parameter is supplied, it will get the follower's of that user. If follower_id is supplied, it will get the people that person is following. If nothing is supplied, it will get the people the current user is following.","operationId":"GetFollowings","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/followings/{id}":{"delete":{"tags":["Following"],"summary":"Unfollow a person.","description":"This is used to unfollow a person.","operationId":"DeleteFollowing","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/levels":{"get":{"tags":["Level"],"summary":"Get all available levels.","description":"This gets a list of all levels available to be obtained.","operationId":"GetLevels","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/merchandise/{id}":{"get":{"tags":["Merchandise"],"summary":"Get a single piece of merchandise.","description":"This gets a single piece of merchandise for a merchandise id.","operationId":"GetMerchandise","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/merchandise":{"get":{"tags":["Merchandise"],"summary":"Get available merchandise.","description":"This gets a list of merchandise, in priority order.","operationId":"GetMerchandise","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/rooms/{room_id}/messages":{"post":{"tags":["Messages"],"summary":"Create a message in a room.","description":"This creates a message in a room and posts it to Firebase as appropriate.","operationId":"CreateMessage","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Messages"],"summary":"Get messages.","description":"This gets a list of message for a from date, to date, with an optional limit. Messages are returned newest first, and the limit is applied to that ordering.","operationId":"GetMessages","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/rooms/{room_id}/message_reports":{"post":{"tags":["Messages"],"summary":"Report a message in a public room.","description":"This reports a message that was posted to a public room.","operationId":"CreateMessageReport","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/rooms/{room_id}/messages/id":{"delete":{"tags":["Messages"],"summary":"Delete (hide) a single message.","description":"This deletes a single message by marking as hidden. Can only be called by the creator.","operationId":"DeleteMessage","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"get":{"tags":["Messages"],"summary":"Get a single message.","description":"This gets a single message for a message id. Only works for messages in private rooms. If the message author has been blocked by the current user, this will return 404 Not Found.","operationId":"GetMessage","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/message_reports":{"get":{"tags":["Messages"],"summary":"Get list of messages reports (ADMIN).","description":"This gets a list of message reports with optional filter.","operationId":"GetMessageReports","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/messages":{"get":{"tags":["Messages"],"summary":"Get a list of messages without regard to room (ADMIN ONLY).","description":"This gets a list of messages without regard to room (with possible exception of room filter).","operationId":"ListMessages","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/messages/{id}":{"patch":{"tags":["Messages"],"summary":"Update a message","description":"This updates a message in a room. Only the hidden field can be changed and only by an admin. If the item is hidden, Firebase will be updated to inform the app that the message has been hidden.","operationId":"UpdateMessage","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/people/{id}/change_password":{"patch":{"tags":["People"],"summary":"Change your password.","description":"This is used to change the logged in user's password.","operationId":"ChangePassword","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/notification_device_ids":{"post":{"tags":["People"],"summary":"Add a new device id for a person.","description":"This adds a new device id to be used for notifications to the Firebase Cloud Messaging Service. A user can have any number of device ids.","operationId":"CreateNotificationDeviceId","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"delete":{"tags":["People"],"summary":"Delete a device id","description":"This deletes a single device id. Can only be called by the owner.","operationId":"DeleteNotificationDeviceId","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/people/password_forgot":{"post":{"tags":["People"],"summary":"Initiate a password reset.","description":"This is used to initiate a password reset. Product and email or username required. If email or username is not found, password reset will fail silently.","operationId":"CreatePasswordReset","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/people":{"post":{"tags":["People"],"summary":"Create person.","description":"This is used to create a new person. If they account creation is successful, they will be logged in and we will send an onboarding email (if we have an email address for them).","operationId":"CreatePerson","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["People"],"summary":"Get a list of people.","description":"This is used to get a list of people.","operationId":"GetPeople","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/people/{id}":{"get":{"tags":["People"],"summary":"Get a person.","description":"This is used to get a person.","operationId":"GetPerson","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"put | patch":{"tags":["People"],"summary":"Update person.","description":"This is used to update a person. Anything not mentioned is left alone.","operationId":"UpdatePerson","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/people/recommended":{"get":{"tags":["People"],"summary":"Get recommended people.","description":"This is used to get a list of people flagged as 'recommended'. It excludes the current user and anyone the current user is following.","operationId":"GetRecommendedPeople","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/people/password_reset":{"post":{"tags":["People"],"summary":"Completes a password reset.","description":"This is used to complete a password reset. It takes a form submitted from fan.link","operationId":"UpdatePasswordReset","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/posts":{"post":{"tags":["Posts"],"summary":"Create a post.","description":"This creates a post and puts in on the feed of the author's followers.","operationId":"CreatePost","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Posts"],"summary":"Get posts for a date range.","description":"This gets a list of posts for a from date, to date, with an optional limit and person. Posts are returned newest first, and the limit is applied to that ordering. Posts included are posts from the passed in person or, if none, the current user along with those of the users the current user is following.","operationId":"GetPosts","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/posts/{id}/comments":{"post":{"tags":["Posts"],"summary":"Create a comment on a post.","description":"This creates a post comment. It is automatically attributed to the logged in user.","operationId":"CreatePostComment","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Posts"],"summary":"Get the comments on a post.","description":"This gets all the non-hidden comments on a post with pagination.","operationId":"GetPostComments","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/posts/{post_id}/reactions":{"post":{"tags":["Posts"],"summary":"React to a post.","description":"This reacts to a post.","operationId":"CreatePostReaction","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/post_reports":{"post":{"tags":["Posts"],"summary":"Report a post.","description":"This reports a post that was posted to a feed.","operationId":"CreatePostReport","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Posts"],"summary":"Get list of post reports (ADMIN).","description":"This gets a list of post reports with optional filter.","operationId":"GetPostReports","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/post_comment_reports":{"post":{"tags":["Posts"],"summary":"Report a post comment.","description":"This reports a post comment.","operationId":"CreatePostReportComment","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Posts"],"summary":"Get list of post comment reports (ADMIN).","description":"This gets a list of post comment reports with optional filter.","operationId":"GetPostCommentReports","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/posts/{id}":{"delete":{"tags":["Posts"],"summary":"Delete (hide) a single post.","description":"This deletes a single post by marking as deleted. Can only be called by the creator.","operationId":"DeletePost","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"get":{"tags":["Posts"],"summary":"Get a single post.","description":"This gets a single post for a post id.","operationId":"GetPost","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"patch":{"tags":["Posts"],"summary":"Update a post (ADMIN)","description":"This updates a post.","operationId":"UpdatePost","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/posts/{post_id}/comments/{id}":{"delete":{"tags":["Posts"],"summary":"Delete a comment on a post.","description":"This deletes a comment on a post. Can be performed by admin or creator of comment.","operationId":"DeletePostComment","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/posts/{post_id}/reactions/{id}":{"delete":{"tags":["Posts"],"summary":"Delete a reaction to a post.","description":"This deletes a reaction to a post.","operationId":"DeletePostReaction","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"post":{"tags":["Posts"],"summary":"Update a reaction to a post.","description":"This updates a reaction to a post.","operationId":"UpdatePostReaction","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/posts/recommended":{"get":{"tags":["Posts"],"summary":"Get recommended posts.","description":"This is used to get a list of published posts flagged as 'recommended'.","operationId":"GetRecommendedPosts","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/posts/{id}/share":{"get":{"tags":["Posts"],"summary":"Get a single, shareable post.","description":"This gets a single post for a post id without authentication.","operationId":"GetShareablePost","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/post_comments/list":{"get":{"tags":["Posts"],"summary":"Get a list of post comments (ADMIN).","description":"This gets a list of post comments with optional filters and pagination.","operationId":"ListPostComments","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/posts/list":{"get":{"tags":["Posts"],"summary":"Get a list of posts (ADMIN ONLY).","description":"This gets a list of posts with optional filters and pagination.","operationId":"ListPosts","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/post_reports/{id}":{"patch":{"tags":["Posts"],"summary":"Update a Post Report.","description":"This updates a post report. The only value that can be changed is the status.","operationId":"UpdatePostReport","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"":{"":{"tags":["Quests"],"description":"","operationId":"CompletionDelete","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CompletionDeleteSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK"}}}}},"/completion/{id}":{"PATCH":{"tags":["Quests"],"summary":"Update a tracked completion","description":"","operationId":"CompletionUpdate","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CompletionUpdateSuccess"},"examples":{"application/unknown":"{\n    property : value\n}"}}}}},"/quest_completion":{"post":{"tags":["Quests"],"summary":"Register a quest as complete","description":"","operationId":"CreateCompletion","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CreateCompletionSuccess"},"examples":{"application/unknown":"{\n    property : value\n}"}}}}},"/quests":{"post":{"tags":["Quests"],"summary":"Create a quest","description":"Creates a quest for the product.","operationId":"CreateQuest","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"admin"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CreateQuestSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n   \"quest\": {\n        \"id\": \"1\",\n        \"product_id\": \"1\",\n        \"event_id\": \"\",\n        \"name\": \"Don't get caught\",\n        \"internal_name\": \"national_treasure\",\n        \"description\": \"Steal the Declaration of Independence\",\n        \"picture_url\": null,\n        \"status\": \"enabled\",\n        \"starts_at\": \"1776-07-04T10:22:08Z\",\n        \"ends_at\": \"2004-11-19T10:22:08Z\",\n        \"create_time\": \"2018-04-30T23:00:20Z\",\n        \"activities\": null\n    }\n}"}}}},"GET":{"tags":["Quests"],"summary":"Get quests for a product","description":"Gets quests that haven't been soft deleted.","operationId":"GetQuests","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetQuestsSuccess"},"examples":{"application/unknown":"  HTTP/1.1 200 OK\n{\n   \"quests\":\n      [\n           {\n              \"quest_id\": 1,\n              \"product_id\": 1,\n              \"event_id\": 99,\n              \"name\": \"My New Quest\",\n              \"description\": \"Find Waldy\",\n              \"picture_url\": \"https://assets.example.com/hi.jpg\",\n              \"status\": \"enabled\",\n              \"starts_at\": \"2031-08-18T10:22:08Z\",\n              \"ends_at\": \"2033-08-18T10:22:08Z\",\n              \"activities\": [\n                   \"activity\": {\n                       See quest_activity#index\n               ]\n           \n          },\n          {\n              \"quest_id\": 2,\n              \"product_id\": 1,\n              \"event_id\": 102,\n              \"name\": \"Don't get caught\",\n              \"description\": \"Steal the Declaration of Independence\",\n              \"picture\": {object},\n              \"status\": \"enabled\",\n              \"starts_at\": 1776-07-04T10:22:08Z,\n              \"ends_at\": 2004-11-19T10:22:08Z\n      },\n   ]\n}"}}}}},"/quests/{id}/activities":{"post":{"tags":["Quests"],"summary":"Create quest activity","description":"Create a quest activity","operationId":"CreateQuestActivity","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"admin"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CreateQuestActivitySuccess"},"examples":{"application/unknown":"{\n    \"activity\": {\n        \"id\": \"1\",\n        \"quest_id\": \"1\",\n        \"description\": \"Break into the museum\",\n        \"hint\": \"Don't get caught\",\n        \"post\": null,\n        \"image\": null,\n        \"audio\": null,\n        \"beacon\": 123456-7890,\n        \"step\": 0\n    }\n}"}}}},"get":{"tags":["Quests"],"summary":"Get Quest Activities","description":"Retrieve all activities for a given quest","operationId":"GetQuestActivities","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"user"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetQuestActivitiesSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"activities\": [\n        {\n            \"id\": \"1\",\n            \"quest_id\": \"1\",\n            \"description\": \"Break into the museum\",\n            \"hint\": \"Got Caught! Again!\",\n            \"post\": null,\n            \"image\": null,\n            \"audio\": null,\n            \"beacon\": 123456-7890,\n            \"step\": 0\n        }\n    ]\n}"}}}}},"/quest_completion/{id}":{"get":{"tags":["Quests"],"summary":"Get a quest by completion id","description":"","operationId":"GetCompletion","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetCompletionSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n}"}}}}},"/quests/{id}":{"get":{"tags":["Quests"],"summary":"Get a single quest","description":"Returns a single quest for a product","operationId":"GetQuest","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetQuestSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"quest\": {\n        \"id\": \"1\",\n        \"product_id\": \"1\",\n        \"event_id\": \"\",\n        \"name\": \"Don't get caught\",\n        \"internal_name\": \"national_treasure\",\n        \"description\": \"Steal the Declaration of Independence\",\n        \"picture_url\": null,\n        \"status\": \"enabled\",\n        \"starts_at\": \"1776-07-04T10:22:08Z\",\n        \"ends_at\": \"2004-11-19T10:22:08Z\",\n        \"create_time\": \"2018-04-30T23:00:20Z\",\n        \"activities\": null\n    }\n}"}}}},"delete":{"tags":["Quests"],"summary":"Delete Quest","description":"","operationId":"QuestDelete","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"admin, superadmin"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/QuestDeleteSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK"}}}}},"/quest_activities/{id}":{"get":{"tags":["Quests"],"summary":"Get a quest activity","description":"Retrieve a single quest activity from the database","operationId":"GetQuestActivity","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"user"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetQuestActivitySuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"activity\": {\n        \"id\": \"1\",\n        \"quest_id\": \"1\",\n        \"description\": \"Break into the museum\",\n        \"hint\": \"Don't get caught\",\n        \"post\": null,\n        \"image\": null,\n        \"audio\": null,\n        \"beacon\": 123456-7890,\n        \"step\": 0\n    }\n}"}}}},"delete":{"tags":["Quests"],"summary":"Destroy a quest activity","description":"","operationId":"QuestActivityDestroy","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/QuestActivityDestroySuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK"}}}},"patch":{"tags":["Quests"],"summary":"Update a quest activity","description":"Update a quest activity with optional fields","operationId":"QuestActivityUpdate","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"admin"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/QuestActivityUpdateSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n    \"activity\": {\n        \"id\": \"1\",\n        \"quest_id\": \"1\",\n        \"description\": \"Break into the museum\",\n        \"hint\": \"Got Caught! Again!\",\n        \"post\": null,\n        \"image\": null,\n        \"audio\": null,\n        \"beacon\": 123456-7890,\n        \"step\": 0\n    }\n}"}}}}},"/quests/list":{"get":{"tags":["Quests"],"summary":"Get a list of all quests (ADMIN ONLY)","description":"Returns a list of all quests regardless of status.","operationId":"GetQuestList","consumes":["application/json"],"produces":["application/json"],"parameters":[],"x-permissions":[{"name":"admin"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GetQuestListSuccess"},"examples":{"application/unknown":"  HTTP/1.1 200 OK\n{\n   \"quests\":\n      [\n           {\n              \"quest_id\": 1,\n              \"product_id\": 1,\n              \"event_id\": 99,\n              \"name\": \"My New Quest\",\n              \"description\": \"Find Waldy\",\n              \"picture_url\": https://assets.example.com/hi.jpg,\n              \"status\": \"enabled\",\n              \"starts_at\": \"2031-08-18T10:22:08Z\",\n              \"ends_at\": \"2033-08-18T10:22:08Z\",\n              \"activities\": [{See Quest_Activity#show method}]\n           \n          },\n          {\n              \"quest_id\": 2,\n              \"product_id\": 1,\n              \"event_id\": 102,\n              \"name\": \"Don't get caught\",\n              \"description\": \"Steal the Declaration of Independence\",\n              \"picture_url\": https://assets.example.com/hi.jpg,\n              \"status\": \"deleted\",\n              \"starts_at\": 1776-07-04T10:22:08Z,\n              \"ends_at\": 2004-11-19T10:22:08Z\n      },\n   ]\n}"}}}}},"/quest/{id}":{"patch":{"tags":["Quests"],"summary":"Update a quest","description":"","operationId":"QuestUpdate","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/QuestUpdateSuccess"},"examples":{"application/unknown":"HTTP/1.1 200 OK\n{\n   \"quest\": {\n        \"id\": \"1\",\n        \"product_id\": \"1\",\n        \"event_id\": \"\",\n        \"name\": \"Don't get caught\",\n        \"internal_name\": \"national_treasure\",\n        \"description\": \"Steal the Declaration of Independence\",\n        \"picture_url\": null,\n        \"status\": \"enabled\",\n        \"starts_at\": \"1776-07-04T10:22:08Z\",\n        \"ends_at\": \"2004-11-19T10:22:08Z\",\n        \"create_time\": \"2018-04-30T23:00:20Z\",\n        \"activities\": null\n    }\n}"}}}}},"/relationships/{id}":{"delete":{"tags":["Relationship"],"summary":"Unfriend a person.","description":"This is used to unfriend a person.","operationId":"DeleteRelationship","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"get":{"tags":["Relationships"],"summary":"Get a single relationship.","description":"This gets a single relationship for a relationship id. Only available to a participating user.","operationId":"GetRelationship","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/relationships":{"post":{"tags":["Relationships"],"summary":"Send a friend request to a person.","description":"This is used to send a friend request to a person. If there is a block between the people, an error will be returned. If the person sending the request already has a pending request (or friendship) from the requested_to_id, then no additional records will be created. The original relationship will be changed to friended (if not already) and returned.","operationId":"CreateRelationship","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Relationships"],"summary":"Get current relationships of a person.","description":"This is used to get a list of someone's friends. If the person supplied is the logged in user, 'requested' status is included for requests TO the current user. Otherwise, only 'friended' status is included.","operationId":"GetRelationships","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"patch":{"tags":["Relationships"],"summary":"Update a relationship.","description":"This is used to accept, deny or unfriend a relationship (friend request).","operationId":"UpdateRelationship","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/rooms":{"post":{"tags":["Rooms"],"summary":"Create a private room.","description":"The creates a private room and makes it active.","operationId":"CreateRoom","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"get":{"tags":["Rooms"],"summary":"Get a list of rooms.","description":"This gets a list of active rooms (public or private, as specified by the \"private\" parameter).","operationId":"GetRooms","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/room/id/room_memberships":{"post":{"tags":["Rooms"],"summary":"Add a room member.","description":"This adds a person to a private room. On success (person added), just returns 200.","operationId":"CreateRoomMembership","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/rooms/id":{"delete":{"tags":["Rooms"],"summary":"Delete a private room.","description":"The deletes a private room. If it has no messages, it deletes it completely. Otherwise, it just changes the status to deleted.","operationId":"DeleteRoom","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"patch":{"tags":["Rooms"],"summary":"Update a private room (name).","description":"The updates a private room. Only the name can by updated, and only by the owner.","operationId":"UpdateRoom","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}}},"/session":{"post":{"tags":["Sessions"],"summary":"Log someone in.","description":"This is used to log someone in.","operationId":"CreateSession","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{}},"delete":{"tags":["Sessions"],"summary":"Log someone out.","description":"This is used to log someone out.","operationId":"DestroySession","consumes":["application/json"],"produces":["application/json"],"parameters":[]},"get":{"tags":["Sessions"],"summary":"Check a session.","description":"This is used to see if your current session is valid. We return the currently logged-in person if the session is still good and a 404 otherwise.","operationId":"GetSession","consumes":["application/json"],"produces":["application/json"],"parameters":[]}},"/quests/{id}/completions/list":{"get":{"tags":["Group"],"summary":"Get a quest by completion id","description":"","operationId":"apiName","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/apiNameSuccess"},"examples":{"application/unknown":"{\n    property : value\n}"}}}}}},"definitions":{"CreateBadgeAction":{"type":"object","properties":{"badge_action":{"type":"object","properties":{"action_type":{"type":"string","description":" The internal name of the badge action."},"identifier":{"type":"string","description":" The identifier for this badge action."}},"required":["action_type"]}},"required":["badge_action"]},"GetBadges":{"type":"object","properties":{"person_id":{"type":"integer","description":" The id of the person whose badges you want.","format":"int32"}},"required":["person_id"]},"BeaconUpdate":{"type":"object","properties":{"product_internal_name":{"type":"string","description":"Internal name of the product"},"product_beacon":{"type":"object","properties":{}},"attached_to":{"type":"number","description":"The activity the beacon is attached to."}},"required":["product_internal_name","product_beacon"]},"BeaconUpdateSuccess":{"type":"object","properties":{"beacon":{"type":"object","properties":{"id":{"type":"number","description":"Beacon ID"},"product_id":{"type":"number","description":"Product ID the beacon is registered to"},"beacon_pid":{"type":"string","description":"The beacon product id located on the box"},"attached_to":{"type":"number","description":"The activity the beacon is attached to. Can be null."},"created_at":{"type":"datetime","description":"The date and time the beacon was added to the database."}},"required":["id","product_id","beacon_pid","attached_to","created_at"]}},"required":["beacon"]},"DeleteBeacon":{"type":"object","properties":{"product_internal_name":{"type":"string","description":"Internal name of the product"}},"required":["product_internal_name"]},"DeleteBeaconSuccess":{"type":"object","properties":{"header":{"type":"header","description":"Returns a 200 response if successful"}},"required":["header"]},"GetBeacon":{"type":"object","properties":{"id":{"type":"number","description":"ID of beacon"}},"required":["id"]},"GetBeaconSuccess":{"type":"object","properties":{"beacon":{"type":"object","properties":{"id":{"type":"number","description":"Beacon ID"},"product_id":{"type":"number","description":"Product ID the beacon is registered to"},"beacon_pid":{"type":"string","description":"The beacon product id located on the box"},"attached_to":{"type":"number","description":"The activity the beacon is attached to. Can be null."},"created_at":{"type":"datetime","description":"The date and time the beacon was added to the database."}},"required":["id","product_id","beacon_pid","attached_to","created_at"]}},"required":["beacon"]},"CreateBeacon":{"type":"object","properties":{"product_beacon":{"type":"object","properties":{"beacon_pid":{"type":"string","description":"The Beacon's product id listed on the box"}},"required":["beacon_pid"]},"attached_to":{"type":"number","description":"The activity the beacon is attached to."}},"required":["product_beacon"]},"CreateBeaconSuccess":{"type":"object","properties":{"beacon":{"type":"object","properties":{"id":{"type":"number","description":"Beacon ID"},"product_id":{"type":"number","description":"Product ID the beacon is registered to"},"beacon_pid":{"type":"string","description":"The beacon product id located on the box"},"attached_to":{"type":"number","description":"The activity the beacon is attached to. Can be null."},"created_at":{"type":"datetime","description":"The date and time the beacon was added to the database."}},"required":["id","product_id","beacon_pid","attached_to","created_at"]}},"required":["beacon"]},"ProductBeacons":{"type":"object","properties":{"page":{"type":"integer","description":"The page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":"The pagination division. Default is 25.","format":"int32"}}},"ProductBeaconsSuccess":{"type":"object","properties":{"beacons":{"type":"object","properties":{"id":{"type":"number","description":"Beacon ID"},"product_id":{"type":"number","description":"Product ID the beacon is registered to"},"beacon_pid":{"type":"string","description":"The beacon product id located on the box"},"attached_to":{"type":"number","description":"The activity the beacon is attached to. Can be null."},"created_at":{"type":"datetime","description":"The date and time the beacon was added to the database."}},"required":["id","product_id","beacon_pid","attached_to","created_at"]}},"required":["beacons"]},"GetBeaconsList":{"type":"object","properties":{"page":{"type":"integer","description":"The page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":"The pagination division. Default is 25.","format":"int32"}}},"GetBeaconsListSuccess":{"type":"object","properties":{"beacons":{"type":"object","properties":{"id":{"type":"number","description":"Beacon ID"},"product_id":{"type":"number","description":"Product ID the beacon is registered to"},"beacon_pid":{"type":"string","description":"The beacon product id located on the box"},"deleted":{"type":"boolean","description":"Is set to true if a beacon has been soft deleted."},"attached_to":{"type":"number","description":"The activity the beacon is attached to. Can be null."},"created_at":{"type":"datetime","description":"The date and time the beacon was added to the database."}},"required":["id","product_id","beacon_pid","deleted","attached_to","created_at"]}},"required":["beacons"]},"CreateBlock":{"type":"object","properties":{"block":{"type":"object","properties":{"blocked_id":{"type":"integer","description":" Person current user wants to block","format":"int32"}},"required":["blocked_id"]}},"required":["block"]},"DeleteBlock":{"type":"object","properties":{"id":{"type":"integer","description":" id of the underlying block","format":"int32"}},"required":["id"]},"GetEvents":{"type":"object","properties":{"from_date":{"type":"string","description":" Only include events starting on or after date in format \"YYYY-MM-DD\". Note valid dates start from 2017-01-01."},"to_date":{"type":"string","description":" Only include events starting on or before date in format \"YYYY-MM-DD\". Note valid dates start from 2017-01-01."}}},"CreateFollowing":{"type":"object","properties":{"followed_id":{"type":"integer","description":" Person to follow","format":"int32"}},"required":["followed_id"]},"GetFollowings":{"type":"object","properties":{"followed_id":{"type":"integer","description":" Person to who's followers to get","format":"int32"},"follower_id":{"type":"integer","description":" Id of person who is following the people in the list we are getting.","format":"int32"}},"required":["followed_id","follower_id"]},"DeleteFollowing":{"type":"object","properties":{"id":{"type":"integer","description":" id of the underlying following","format":"int32"}},"required":["id"]},"CreateMessage":{"type":"object","properties":{"message":{"type":"object","properties":{"body":{"type":"string","description":" The body of the message."},"picture":{"type":"attachment","description":" Message picture, this should be `image/gif`, `image/png`, or `image/jpeg`."}}},"mentions":{"type":"array","description":" Array of mentions each consisting of required person_id (integer), location (integer) and length (integer)"}},"required":["message"]},"GetMessages":{"type":"object","properties":{"page":{"type":"integer","description":" Page number to get.","format":"int32"},"per_page":{"type":"integer","description":" Number of messages in a page. Default is 25.","format":"int32"},"pinned":{"type":"string","description":" \"Yes\" to provide only pinned messages, \"No\" to provide only non-pinned messages. \"All\" (default) for all regardless of pinned status."},"from_date":{"type":"string","description":" From date in format \"YYYY-MM-DD\". Note valid dates start from 2017-01-01."},"to_date":{"type":"string","description":" To date in format \"YYYY-MM-DD\". Note valid dates start from 2017-01-01."},"limit":{"type":"integer","description":" Limit results to count of limit.","format":"int32"}},"required":["page","from_date","to_date"]},"CreateMessageReport":{"type":"object","properties":{"room_id":{"type":"room_id","description":" Id of the room in which the message was created."},"message_report":{"type":"object","properties":{"message_id":{"type":"integer","description":" The id of the message being reported.","format":"int32"},"reason":{"type":"string","description":" The reason given by the user for reporting the message."}},"required":["message_id"]}},"required":["room_id","message_report"]},"GetMessageReports":{"type":"object","properties":{"status_filter":{"type":"string","description":" If provided, valid values are \"message_hidden\", \"no_action_needed\", and \"pending\""}}},"ListMessages":{"type":"object","properties":{"id_filter":{"type":"integer","description":" Full match on Message id.","format":"int32"},"person_filter":{"type":"string","description":" Full or partial match on person username."},"room_id_filter":{"type":"integer","description":" Full match on Room id.","format":"int32"},"body_filter":{"type":"string","description":" Full or partial match on message body."},"reported_filter":{"type":"boolean","description":" Filter on whether the message has been reported."},"page":{"type":"integer","description":" Page number. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" Messages per page. Default is 25.","format":"int32"}}},"UpdateMessage":{"type":"object","properties":{"message":{"type":"object","properties":{"hidden":{"type":"boolean","description":" Whether or not the item is hidden."}},"required":["hidden"]}},"required":["message"]},"ChangePassword":{"type":"object","properties":{"id":{"type":"objectid","description":" The person id."},"person":{"type":"object","properties":{"current_password":{"type":"string","description":" Current password."},"new_password":{"type":"string","description":" New password."}},"required":["current_password"]}},"required":["id","person"]},"CreateNotificationDeviceId":{"type":"object","properties":{"device_id":{"type":"string","description":""}},"required":["device_id"]},"DeleteNotificationDeviceId":{"type":"object","properties":{"device_id":{"type":"string","description":""}},"required":["device_id"]},"CreatePasswordReset":{"type":"object","properties":{"product":{"type":"string","description":" Internal name of product"},"email_or_username":{"type":"string","description":" The person's email or username."}},"required":["product","email_or_username"]},"CreatePerson":{"type":"object","properties":{"product":{"type":"string","description":" Internal name of product"},"person":{"type":"object","properties":{"email":{"type":"string","description":" Email address (required unless using FB auth token)."},"name":{"type":"string","description":" Name."},"username":{"type":"string","description":" Username. This needs to be unique within product scope."},"password":{"type":"string","description":" Password."},"picture":{"type":"attachment","description":" Profile picture, this should be `image/gif`, `image/png`, or `image/jpeg`."},"gender":{"type":"string","description":" Gender. Valid options: unspecified (default), male, female"},"birthdate":{"type":"string","description":" Birth dateTo date in format \"YYYY-MM-DD\"."},"city":{"type":"string","description":" Person's supplied city."},"country_code":{"type":"string","description":" Alpha2 code (two letters) from ISO 3166 list."}},"required":["email","username","password"]},"facebook_auth_token":{"type":"string","description":" Auth token from Facebook"}},"required":["product","person","facebook_auth_token"]},"GetPeople":{"type":"object","properties":{"page":{"type":"integer","description":" Page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" Page division. Default is 25.","format":"int32"},"username_filter":{"type":"string","description":" A username or username fragment to filter on."},"email_filter":{"type":"string","description":" An email or email fragment to filter on."}}},"GetPerson":{"type":"object","properties":{"id":{"type":"objectid","description":" The id of the person you want."}},"required":["id"]},"UpdatePerson":{"type":"object","properties":{"id":{"type":"objectid","description":" The person id."},"person":{"type":"object","properties":{"email":{"type":"string","description":" Email address."},"name":{"type":"string","description":" Full name."},"username":{"type":"string","description":" Username. This needs to be unique."},"picture":{"type":"attachment","description":" Profile picture, this should be `image/gif`, `image/png`, or `image/jpeg`."},"gender":{"type":"string","description":" Gender. Valid options: unspecified (default), male, female"},"birthdate":{"type":"string","description":" Birth dateTo date in format \"YYYY-MM-DD\"."},"city":{"type":"string","description":" Person's supplied city."},"country_code":{"type":"string","description":" Alpha2 code (two letters) from ISO 3166 list."}}}},"required":["id","person"]},"UpdatePasswordReset":{"type":"object","properties":{"token":{"type":"string","description":" Token from email link"},"password":{"type":"string","description":" The new password."}},"required":["token","password"]},"CreatePost":{"type":"object","properties":{"post":{"type":"object","properties":{"body":{"type":"string","description":" The body of the message."},"picture":{"type":"attachment","description":" Post picture, this should be `image/gif`, `image/png`, or `image/jpeg`."},"global":{"type":"boolean","description":" Whether the post is global (seen by all users)."},"starts_at":{"type":"string","description":" When the post should start being visible (same format as in responses)."},"ends_at":{"type":"string","description":" When the post should stop being visible (same format as in responses)."},"repost_interval":{"type":"integer","description":" How often this post should be republished.","format":"int32"},"status":{"type":"string","description":" Valid values: \"pending\", \"published\", \"deleted\", \"rejected\""},"priority":{"type":"integer","description":" Priority value for post.","format":"int32"},"recommended":{"type":"boolean","description":"(Admin) Whether the post is recommended."}}}},"required":["post"]},"GetPosts":{"type":"object","properties":{"person_id":{"type":"integer","description":" The person whose posts to get. If not supplied, posts from current user plus those from people the current user is following will be returned.","format":"int32"},"page":{"type":"integer","description":" Page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" Number of posts in a page. Default is 25.","format":"int32"},"from_date":{"type":"string","description":" From date in format \"YYYY-MM-DD\". Note valid dates start from 2017-01-01."},"to_date":{"type":"string","description":" To date in format \"YYYY-MM-DD\". Note valid dates start from 2017-01-01."},"limit":{"type":"integer","description":" Limit results to count of limit.","format":"int32"}},"required":["from_date","to_date"]},"CreatePostComment":{"type":"object","properties":{"post_comment":{"type":"object","properties":{"body":{"type":"string","description":" The body of the comment."}},"required":["body"]},"mentions":{"type":"array","description":" Mentions in the comment."},"mention":{"type":"object","properties":{"location":{"type":"integer","description":" Where the mention text starts in the comment.","format":"int32"},"length":{"type":"integer","description":" The length of the mention text.","format":"int32"}},"required":["location","length"]},"person_id":{"type":"integer","description":" The id of the person mentioned.","format":"int32"}},"required":["post_comment","person_id"]},"GetPostComments":{"type":"object","properties":{"page":{"type":"integer","description":" The page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" The pagination division. Default is 25.","format":"int32"}}},"CreatePostReaction":{"type":"object","properties":{"post_id":{"type":"integer","description":" The id of the post to which you are reacting","format":"int32"},"post_reaction":{"type":"object","properties":{"reaction":{"type":"string","description":" The identifier for the reaction. Accepts stringified hex values between 0 and 10FFFF, inclusive."}},"required":["reaction"]}},"required":["post_id","post_reaction"]},"CreatePostReport":{"type":"object","properties":{"post_report":{"type":"object","properties":{"post_id":{"type":"integer","description":" The id of the post being reported.","format":"int32"},"reason":{"type":"string","description":" The reason given by the user for reporting the post."}},"required":["post_id"]}},"required":["post_report"]},"GetPostReports":{"type":"object","properties":{"page":{"type":"integer","description":" Page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" Page division. Default is 25.","format":"int32"},"status_filter":{"type":"string","description":" If provided, valid values are \"pending\", \"no_action_needed\", and \"post_hidden\""}}},"CreatePostReportComment":{"type":"object","properties":{"post_comment_report":{"type":"object","properties":{"post_comment_id":{"type":"integer","description":" The id of the post comment being reported.","format":"int32"},"reason":{"type":"string","description":" The reason given by the user for reporting the post comment."}},"required":["post_comment_id"]}},"required":["post_comment_report"]},"GetPostCommentReports":{"type":"object","properties":{"page":{"type":"integer","description":" Page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" Page division. Default is 25.","format":"int32"},"status_filter":{"type":"string","description":" If provided, valid values are \"pending\", \"no_action_needed\", and \"comment_hidden\""}}},"DeletePostComment":{"type":"object","properties":{"post_id":{"type":"integer","description":" The id of the post to which the comment relates","format":"int32"},"id":{"type":"integer","description":" The id of the post comment you are deleting","format":"int32"}},"required":["post_id","id"]},"DeletePostReaction":{"type":"object","properties":{"post_id":{"type":"integer","description":" The id of the post to which you are reacting","format":"int32"},"id":{"type":"integer","description":" The id of the post reaction you are updating","format":"int32"}},"required":["post_id","id"]},"UpdatePostReaction":{"type":"object","properties":{"post_id":{"type":"integer","description":" The id of the post to which you are reacting","format":"int32"},"id":{"type":"integer","description":" The id of the post reaction you are updating","format":"int32"},"post_reaction":{"type":"object","properties":{"reaction":{"type":"string","description":" The identifier for the reaction. Accepts stringified hex values between 0 and 10FFFF, inclusive."}},"required":["reaction"]}},"required":["post_id","id","post_reaction"]},"GetRecommendedPosts":{"type":"object","properties":{"page":{"type":"integer","description":" Page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" Page division. Default is 25.","format":"int32"}}},"GetShareablePost":{"type":"object","properties":{"product":{"type":"string","description":" Product internal name."}},"required":["product"]},"ListPostComments":{"type":"object","properties":{"page":{"type":"integer","description":" The page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" The pagination division. Default is 25.","format":"int32"},"body_filter":{"type":"string","description":" Full or partial match on comment body."},"person_filter":{"type":"string","description":" Full or partial match on person username or email."}}},"ListPosts":{"type":"object","properties":{"page":{"type":"integer","description":" The page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" The pagination division. Default is 25.","format":"int32"},"id_filter":{"type":"integer","description":" Full match on post.id. Will return either a one element array or an empty array.","format":"int32"},"person_id_filter":{"type":"integer","description":" Full match on person id.","format":"int32"},"person_filter":{"type":"string","description":" Full or partial match on person username or email."},"body_filter":{"type":"string","description":" Full or partial match on post body."},"posted_after_filter":{"type":"datetime","description":" Posted at or after timestamp. Format: \"2018-01-08T12:13:42Z\""},"posted_before_filter":{"type":"datetime","description":" Posted at or before timestamp. Format: \"2018-01-08T12:13:42Z\""},"status_filter":{"type":"string","description":" Post status. Valid values: pending published deleted rejected errored"}}},"UpdatePost":{"type":"object","properties":{"post":{"type":"object","properties":{"body":{"type":"string","description":" The body of the post."},"picture":{"type":"attachment","description":" Post picture, this should be `image/gif`, `image/png`, or `image/jpeg`."},"global":{"type":"boolean","description":" Whether the post is global (seen by all users)."},"starts_at":{"type":"string","description":" When the post should start being visible (same format as in responses)."},"ends_at":{"type":"string","description":" When the post should stop being visible (same format as in responses)."},"repost_interval":{"type":"integer","description":" How often this post should be republished.","format":"int32"},"status":{"type":"string","description":" Valid values: \"pending\", \"published\", \"deleted\", \"rejected\""},"priority":{"type":"integer","description":" Priority value for post.","format":"int32"},"recommended":{"type":"boolean","description":"(Admin) Whether the post is recommended."}}}},"required":["post"]},"UpdatePostCommentReport":{"type":"object","properties":{"id":{"type":"id","description":" URL parameter. id of the post comment report you want to update."},"post_comment_report":{"type":"object","properties":{"status":{"type":"status","description":" The new status. Valid statuses are \"pending\", \"no_action_needed\", \"comment_hidden\""}},"required":["status"]}},"required":["id","post_comment_report"]},"UpdatePostReport":{"type":"object","properties":{"id":{"type":"id","description":" URL parameter. id of the post report you want to update."},"post_report":{"type":"object","properties":{"status":{"type":"status","description":" The new status. Valid statuses are \"pending\", \"no_action_needed\", \"post_hidden\""}},"required":["status"]}},"required":["id","post_report"]},"CompletionDelete":{"type":"object","properties":{"id":{"type":"number","description":"ID of the completion that is being deleted"}},"required":["id"]},"CompletionDeleteSuccess":{"type":"object","properties":{"OK":{"type":"header","description":"Returns a 200 OK status if successful"}},"required":["OK"]},"CompletionUpdate":{"type":"object","properties":{"id":{"type":"number","description":"ID of the completion being updated"},"quest_id":{"type":"number","description":"The id of the quest the completion is associated with"},"activity_id":{"type":"number","description":"The id of the completed activity"}},"required":["id"]},"CompletionUpdateSuccess":{"type":"object","properties":{"name":{"type":"type","description":"description"}},"required":["name"]},"CreateCompletion":{"type":"object","properties":{"quest_id":{"type":"number","description":"The id of the quest the completion is associated with"},"activity_id":{"type":"number","description":"The id of the completed activity"}},"required":["quest_id","activity_id"]},"CreateCompletionSuccess":{"type":"object","properties":{"completion":{"type":"object","properties":{"id":{"type":"number","description":"ID of the created completion"},"person_id":{"type":"number","description":"The ID of the user who completed the activity"},"quest_id":{"type":"number","description":"ID of the quest"},"activity_id":{"type":"number","description":"ID of the activity that was completed"},"created_at":{"type":"datetime","description":"The date and time the completion was created."}},"required":["id","person_id","quest_id","activity_id","created_at"]}},"required":["completion"]},"CreateQuest":{"type":"object","properties":{"product":{"type":"string","description":"Product name. Uses current_user if not passed."},"quest":{"type":"object","properties":{"event_id":{"type":"number","description":"Optional event id to attach a quest to an event"},"name":{"type":"string","description":"Name of the quest"},"internal_name":{"type":"string","description":"Internal name for the quest"},"description":{"type":"string","description":"Desciption of the quest."},"picture":{"type":"object","properties":{}},"status":{"type":"string","description":"Current quest status. Can be Active, Enabled, Disabled or Deleted"},"starts_at":{"type":"datetime","description":"Datetime String for when the quest starts."},"ends_at":{"type":"datetime","description":"Datetime String for when the quest is over."}},"required":["name","internal_name","description","starts_at"]}},"required":["quest"]},"CreateQuestSuccess":{"type":"object","properties":{"quest":{"type":"object","properties":{"id":{"type":"number","description":"ID of quest"},"product_id":{"type":"number","description":"Product id the quest is attached to"},"event_id":{"type":"number","description":"Optional event id the quest is attached to"},"name":{"type":"string","description":"Name of the quest"},"description":{"type":"string","description":"Description of the quest"},"picture_url":{"type":"string","description":"The url for the attached picture"},"status":{"type":"string","description":"The current status of the quest. Can be Active, Enabled, Disabled."},"starts_at":{"type":"datetime","description":"When the quest should be active."},"ends_at":{"type":"datetime","description":"Optional end time for when the quest should be disabled."},"activities":{"type":"array","description":"The activities associated with the quest","items":{"$ref":"#/definitions/CreateQuestSuccess_activities"}}},"required":["id","product_id","event_id","name","description","picture_url","status","starts_at","ends_at","activities"]}},"required":["quest"]},"CreateQuestSuccess_activities":{"type":"object","properties":{}},"GetQuests":{"type":"object","properties":{"product":{"type":"string","description":"Product name. Uses current_user if not passed."}}},"GetQuestsSuccess":{"type":"object","properties":{"quests":{"type":"array","description":"List of quests for product","items":{"$ref":"#/definitions/GetQuestsSuccess_quests"}}},"required":["quests"]},"GetQuestsSuccess_quests":{"type":"object","properties":{"id":{"type":"number","description":"ID of quest"},"product_id":{"type":"number","description":"Product id the quest is attached to"},"event_id":{"type":"number","description":"Optional event id the quest is attached to"},"name":{"type":"string","description":"Name of the quest"},"description":{"type":"string","description":"Description of the quest"},"picture_url":{"type":"string","description":"The url for the attached picture"},"status":{"type":"string","description":"The current status of the quest. Can be Active, Enabled, Disabled."},"starts_at":{"type":"datetime","description":"When the quest should be active."},"ends_at":{"type":"datetime","description":"Optional end time for when the quest should be disabled."},"activities":{"type":"array","description":"The activities associated with the quest","items":{"$ref":"#/definitions/GetQuestsSuccess_activities"}}},"required":["id","product_id","event_id","name","description","picture_url","status","starts_at","ends_at","activities"]},"GetQuestsSuccess_activities":{"type":"object","properties":{"id":{"type":"number","description":"ID of the activity"},"description":{"type":"string","description":"The description of the activity"},"hint":{"type":"string","description":"Hint associated with the activity"},"post":{"type":"boolean","description":"Whether or not the activity requires a post to be created."},"image":{"type":"boolean","description":"Whether or not the activity requires an image to be taken."},"audio":{"type":"boolean","description":"Whether or not the activity requires an audio clip."},"beacon":{"type":"string","description":"The beacon associated with the activity"},"step":{"type":"number","description":"The step number for quest progression"}},"required":["id","description","hint","post","image","audio","beacon","step"]},"CreateQuestActivity":{"type":"object","properties":{"id":{"type":"number","description":"Quest ID"},"quest_activity":{"type":"object","properties":{}},"description":{"type":"string","description":"A description of the requirements for the activity"},"hint":{"type":"string","description":"Optional hint text"},"post":{"type":"boolean","description":"Boolean for whether or not the activity requires a post"},"image":{"type":"boolean","description":"Boolean for whether or not the activity requires an image to be attached"},"audio":{"type":"boolean","description":"Boolean for whether or not the activity requires an audio file"},"beacon":{"type":"string","description":"Beacon attached to the activity"},"step":{"type":"int","description":"Used to order the activities. Multiple activities can share the same step"}},"required":["id","quest_activity","description","beacon","step"]},"CreateQuestActivitySuccess":{"type":"object","properties":{"quest_activity":{"type":"json","description":"Returns the create quest activity"}},"required":["quest_activity"]},"GetQuestActivities":{"type":"object","properties":{"id":{"type":"number","description":"Quest ID"}},"required":["id"]},"GetQuestActivitiesSuccess":{"type":"object","properties":{"quest_activities":{"type":"array","description":"An array of activity objects","items":{"$ref":"#/definitions/GetQuestActivitiesSuccess_quest_activities"}}},"required":["quest_activities"]},"GetQuestActivitiesSuccess_quest_activities":{"type":"object","properties":{}},"GetCompletion":{"type":"object","properties":{"id":{"type":"number","description":"ID of the completion"}},"required":["id"]},"GetCompletionSuccess":{"type":"object","properties":{"completion":{"type":"object","properties":{"id":{"type":"number","description":"ID of the created completion"},"person_id":{"type":"number","description":"The ID of the user who completed the activity"},"quest_id":{"type":"number","description":"ID of the quest"},"activity_id":{"type":"number","description":"ID of the activity that was completed"},"created_at":{"type":"datetime","description":"The date and time the completion was created."}},"required":["id","person_id","quest_id","activity_id","created_at"]}},"required":["completion"]},"GetQuest":{"type":"object","properties":{"id":{"type":"number","description":"ID of the activity"}},"required":["id"]},"GetQuestSuccess":{"type":"object","properties":{"Quest":{"type":"object","properties":{}},"quest":{"type":"object","properties":{"product_id":{"type":"number","description":"Product id the quest is attached to"},"event_id":{"type":"number","description":"Optional event id the quest is attached to"},"name":{"type":"string","description":"Name of the quest"},"description":{"type":"string","description":"Description of the quest"},"picture_url":{"type":"string","description":"The url for the attached picture"},"status":{"type":"string","description":"The current status of the quest. Can be Active, Enabled, Disabled."},"starts_at":{"type":"datetime","description":"When the quest should be active."},"ends_at":{"type":"datetime","description":"Optional end time for when the quest should be disabled."},"activities":{"type":"array","description":"The activities associated with the quest","items":{"$ref":"#/definitions/GetQuestSuccess_activities"}}},"required":["product_id","event_id","name","description","picture_url","status","starts_at","ends_at","activities"]},"id":{"type":"number","description":"ID of quest"}},"required":["Quest","id"]},"GetQuestSuccess_activities":{"type":"object","properties":{"id":{"type":"number","description":"ID of the activity"},"description":{"type":"string","description":"The description of the activity"},"hint":{"type":"string","description":"Hint associated with the activity"},"post":{"type":"boolean","description":"Whether or not the activity requires a post to be created."},"image":{"type":"boolean","description":"Whether or not the activity requires an image to be taken."},"audio":{"type":"boolean","description":"Whether or not the activity requires an audio clip."},"beacon":{"type":"string","description":"The beacon associated with the activity"},"step":{"type":"number","description":"The step number for quest progression"}},"required":["id","description","hint","post","image","audio","beacon","step"]},"QuestDelete":{"type":"object","properties":{"id":{"type":"number","description":"ID of quest to delete"}},"required":["id"]},"QuestDeleteSuccess":{"type":"object","properties":{"ok":{"type":"header","description":"Returns a 200 OK response"}},"required":["ok"]},"GetQuestActivity":{"type":"object","properties":{"id":{"type":"number","description":"Activity ID"}},"required":["id"]},"GetQuestActivitySuccess":{"type":"object","properties":{"activity":{"type":"object","properties":{}}},"required":["activity"]},"QuestActivityDestroy":{"type":"object","properties":{"id":{"type":"number","description":"Activity id"}},"required":["id"]},"QuestActivityDestroySuccess":{"type":"object","properties":{"header":{"type":"header","description":"200 OK header response"}},"required":["header"]},"QuestActivityUpdate":{"type":"object","properties":{"id":{"type":"number","description":"ID of activity to update"},"quest_activity":{"type":"object","properties":{}},"description":{"type":"string","description":"A description of the requirements for the activity"},"hint":{"type":"string","description":"Optional hint text"},"post":{"type":"boolean","description":"Boolean for whether or not the activity requires a post"},"image":{"type":"boolean","description":"Boolean for whether or not the activity requires an image to be attached"},"audio":{"type":"boolean","description":"Boolean for whether or not the activity requires an audio file"},"beacon":{"type":"string","description":"Beacon attached to the activity"},"step":{"type":"int","description":"Used to order the activities. Multiple activities can share the same step"}},"required":["id","quest_activity","beacon","step"]},"QuestActivityUpdateSuccess":{"type":"object","properties":{"quest_activity":{"type":"object","properties":{}}},"required":["quest_activity"]},"GetQuestList":{"type":"object","properties":{"page":{"type":"integer","description":" The page number to get. Default is 1.","format":"int32"},"per_page":{"type":"integer","description":" The pagination division. Default is 25.","format":"int32"},"product_id_filter":{"type":"integer","description":" Full match on product id.","format":"int32"},"name_filter":{"type":"string","description":" Full or partial match on quest name."},"internal_name_filter":{"type":"string","description":" Full or partial match on quest's internal name."},"description_filter":{"type":"string","description":" Full or partial match on the quest description."},"starts_at_filter":{"type":"datetime","description":" Quest starts at or after timestamp. Format: \"2018-01-08'T'12:13:42'Z'\""},"ends_at_filter":{"type":"datetime","description":" Quest ends at or before timestamp. Format: \"2018-01-08'T'12:13:42'Z'\""},"status_filter":{"type":"string","description":" Quest status. Valid values: active enabled disabled deleted"}}},"GetQuestListSuccess":{"type":"object","properties":{"quests":{"type":"array","description":"List of quests for product","items":{"$ref":"#/definitions/GetQuestListSuccess_quests"}}},"required":["quests"]},"GetQuestListSuccess_quests":{"type":"object","properties":{"id":{"type":"number","description":"ID of quest"},"product_id":{"type":"number","description":"Product id the quest is attached to"},"event_id":{"type":"number","description":"Optional event id the quest is attached to"},"name":{"type":"string","description":"Name of the quest"},"description":{"type":"string","description":"Description of the quest"},"picture_url":{"type":"string","description":"The url for the attached picture"},"status":{"type":"string","description":"The current status of the quest. Can be Active, Enabled, Disabled."},"starts_at":{"type":"datetime","description":"When the quest should be active."},"ends_at":{"type":"datetime","description":"Optional end time for when the quest should be disabled."},"activities":{"type":"array","description":"The activities associated with the quest","items":{"$ref":"#/definitions/GetQuestListSuccess_activities"}}},"required":["id","product_id","event_id","name","description","picture_url","status","starts_at","ends_at","activities"]},"GetQuestListSuccess_activities":{"type":"object","properties":{"id":{"type":"number","description":"ID of the activity"},"description":{"type":"string","description":"The description of the activity"},"hint":{"type":"string","description":"Hint associated with the activity"},"post":{"type":"boolean","description":"Whether or not the activity requires a post to be created."},"image":{"type":"boolean","description":"Whether or not the activity requires an image to be taken."},"audio":{"type":"boolean","description":"Whether or not the activity requires an audio clip."},"beacon":{"type":"string","description":"The beacon associated with the activity"},"step":{"type":"number","description":"The step number for quest progression"}},"required":["id","description","hint","post","image","audio","beacon","step"]},"QuestUpdate":{"type":"object","properties":{"id":{"type":"number","description":"ID of the quest to update"},"product":{"type":"string","description":"Product name. Uses current_user if not passed."},"quest":{"type":"object","properties":{"event_id":{"type":"number","description":"Optional event id to attach a quest to an event"},"name":{"type":"string","description":"Name of the quest"},"internal_name":{"type":"string","description":"Internal name for the quest"},"description":{"type":"string","description":"Desciption of the quest."},"picture":{"type":"object","properties":{}},"status":{"type":"string","description":"Current quest status. Can be Active, Enabled, Disabled or Deleted"},"starts_at":{"type":"datetime","description":"Datetime String for when the quest starts."},"ends_at":{"type":"datetime","description":"Datetime String for when the quest is over."}}}},"required":["id","quest"]},"QuestUpdateSuccess":{"type":"object","properties":{"quest":{"type":"object","properties":{"id":{"type":"number","description":"ID of quest"},"product_id":{"type":"number","description":"Product id the quest is attached to"},"event_id":{"type":"number","description":"Optional event id the quest is attached to"},"name":{"type":"string","description":"Name of the quest"},"description":{"type":"string","description":"Description of the quest"},"picture_url":{"type":"string","description":"The url for the attached picture"},"status":{"type":"string","description":"The current status of the quest. Can be Active, Enabled, Disabled."},"starts_at":{"type":"datetime","description":"When the quest should be active."},"ends_at":{"type":"datetime","description":"Optional end time for when the quest should be disabled."},"activities":{"type":"array","description":"The activities associated with the quest","items":{"$ref":"#/definitions/QuestUpdateSuccess_activities"}}},"required":["id","product_id","event_id","name","description","picture_url","status","starts_at","ends_at","activities"]}},"required":["quest"]},"QuestUpdateSuccess_activities":{"type":"object","properties":{}},"DeleteRelationship":{"type":"object","properties":{"id":{"type":"integer","description":" id of the underlying relationship","format":"int32"}},"required":["id"]},"CreateRelationship":{"type":"object","properties":{"relationship":{"type":"object","properties":{"requested_to_id":{"type":"integer","description":" Person for whom the request is intended","format":"int32"}},"required":["requested_to_id"]}},"required":["relationship"]},"GetRelationships":{"type":"object","properties":{"person_id":{"type":"integer","description":" Person whose friends to get","format":"int32"}}},"UpdateRelationship":{"type":"object","properties":{"relationship":{"type":"object","properties":{"status":{"type":"integer","description":" New status. Valid values are \"friended\", \"denied\" or \"withdrawn\". However each one is only valid in the state and/or from the person that you would expect (e.g. the relationship requester cannot update with \"friended\").","format":"int32"}},"required":["status"]}},"required":["relationship"]},"CreateRoom":{"type":"object","properties":{"room":{"type":"object","properties":{"name":{"type":"string","description":" The name of the room. Must be between 3 and 26 characters, inclusive."},"description":{"type":"string","description":" The description of the room."},"picture":{"type":"attachment","description":" NOT YET IMPLEMENTED"},"member_ids":{"type":"array","description":" Ids of persons to add as members. Users who are blocked by or who are blocking the current user will be silently excluded. You do not need to include the current user, who will be made a member automatically."}},"required":["name"]}},"required":["room"]},"GetRooms":{"type":"object","properties":{"private":{"type":"boolean","description":" Which type of room you want. With true you will get just active private rooms of which the current user is a member. With false (the default), you will get just all active public rooms."}}},"CreateRoomMembership":{"type":"object","properties":{"person":{"type":"object","properties":{"id":{"type":"integer","description":" The id of the person.","format":"int32"}},"required":["id"]}},"required":["person"]},"UpdateRoom":{"type":"object","properties":{"room":{"type":"object","properties":{"name":{"type":"string","description":" The name of the room. Must be between 3 and 26 characters, inclusive."},"picture":{"type":"attachment","description":" NOT YET IMPLEMENTED"}},"required":["name"]}},"required":["room"]},"CreateSession":{"type":"object","properties":{"product":{"type":"string","description":" Internal name of product logging into."},"email_or_username":{"type":"string","description":" The person's email address or username. Required unless using Facebook ID."},"facebook_auth_token":{"type":"string","description":" The facebook auth token. Required unless using username/password."},"password":{"type":"string","description":" The person's password. Required unless using facebook_auth_token"},"keep":{"type":"boolean","description":"NOT YET SUPPORTED True if you want to keep them signed in, otherwise this will be a non-persistent session."}},"required":["product","email_or_username","password"]},"apiName":{"type":"object","properties":{"page":{"type":"number","description":"The page number to get. Default is 1."},"per_page":{"type":"number","description":"The pagination division. Default is 25."},"person_id_filter":{"type":"number","description":"Full match on person id."},"quest_id_filter":{"type":"number","description":"Full match on quest id."},"activity_id_filter":{"type":"number","description":"Full match on activity id."}}},"apiNameSuccess":{"type":"object","properties":{"completions":{"type":"object","properties":{"id":{"type":"number","description":"ID of the created completion"},"person_id":{"type":"number","description":"The ID of the user who completed the activity"},"quest_id":{"type":"number","description":"ID of the quest"},"activity_id":{"type":"number","description":"ID of the activity that was completed"},"created_at":{"type":"datetime","description":"The date and time the completion was created."}},"required":["id","person_id","quest_id","activity_id","created_at"]}},"required":["completions"]}}}